<!--
  ~ Copyright 2000-2013 JetBrains s.r.o.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project name="octopus-build-trigger" default="replace-tokens-in-teamcity-plugin-xml" basedir=".">

    <target name="replace-tokens-in-teamcity-plugin-xml" depends="define.version">
        <property name="home" value="${artifact.output.path}"/>

        <echo message="replacing tokens in teamcity-plugin.xml file under ${home}"/>

        <condition property="build.number" value="${plugin.version}" else="${build.number}">
            <not>
                <isset property="build.number"/>
            </not>
        </condition>

        <echo message="Setting version to: ${build.number}"/>
        <!-- update all references in teamcity-plugin.xml files -->
        <replace dir="${home}" summary="true">
            <include name="**/teamcity-plugin.xml"/>

            <replacefilter token="@Plugin_Version@" value="${build.number}"/>
        </replace>
    </target>

    <target name="define.version">
        <tstamp>
            <format property="current.time" pattern="yyyyMMddHHmm"/>
        </tstamp>
        <property name="plugin.version" value="SNAPSHOT-${current.time}"/>
    </target>

    <property name="path.variable.teamcitydistribution" value="octopus-build-trigger-server/lib/teamcity-815" />
    <property environment="env"/>

<property environment="env"/>
<condition property="jdk.home.1.8" value="${env.JAVA_HOME}" else="/Library/Java/JavaVirtualMachines/jdk1.8.0_65.jdk/Contents/Home">
    <isset property="env.JAVA_HOME" />
</condition>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/CVS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.war"/>
    <include name="*.swc"/>
    <include name="*.apk"/>
    <include name="*.zip"/>
    <include name="*.ear"/>
    <include name="*.egg"/>
    <include name="*.ane"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <include name="**/?*.properties"/>
    <include name="**/?*.xml"/>
    <include name="**/?*.gif"/>
    <include name="**/?*.png"/>
    <include name="**/?*.jpeg"/>
    <include name="**/?*.jpg"/>
    <include name="**/?*.html"/>
    <include name="**/?*.dtd"/>
    <include name="**/?*.tld"/>
    <include name="**/?*.ftl"/>
    <include name="**/?*.jsp"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.1.8" value="${jdk.home.1.8}/bin"/>
  <path id="jdk.classpath.1.8">
    <fileset dir="${jdk.home.1.8}">
      <include name="lib/ant-javafx.jar"/>
      <include name="lib/dt.jar"/>
      <include name="lib/javafx-mx.jar"/>
      <include name="lib/jconsole.jar"/>
      <include name="lib/packager.jar"/>
      <include name="lib/sa-jdi.jar"/>
      <include name="lib/tools.jar"/>
      <include name="jre/lib/charsets.jar"/>
      <include name="jre/lib/deploy.jar"/>
      <include name="jre/lib/javaws.jar"/>
      <include name="jre/lib/jce.jar"/>
      <include name="jre/lib/jfr.jar"/>
      <include name="jre/lib/jfxswt.jar"/>
      <include name="jre/lib/jsse.jar"/>
      <include name="jre/lib/management-agent.jar"/>
      <include name="jre/lib/plugin.jar"/>
      <include name="jre/lib/resources.jar"/>
      <include name="jre/lib/rt.jar"/>
      <include name="jre/lib/ext/cldrdata.jar"/>
      <include name="jre/lib/ext/dnsns.jar"/>
      <include name="jre/lib/ext/jaccess.jar"/>
      <include name="jre/lib/ext/jfxrt.jar"/>
      <include name="jre/lib/ext/localedata.jar"/>
      <include name="jre/lib/ext/nashorn.jar"/>
      <include name="jre/lib/ext/sunec.jar"/>
      <include name="jre/lib/ext/sunjce_provider.jar"/>
      <include name="jre/lib/ext/sunpkcs11.jar"/>
      <include name="jre/lib/ext/zipfs.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.8}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.8}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.8"/>
  
  
  <!-- Project Libraries -->
  
  <path id="library.apache-ftpserver-1.0.5.classpath">
    <pathelement location="${basedir}/octopus-build-trigger-tests/lib/apache-ftpserver-1.0.5/ftplet-api-1.0.5.jar"/>
    <pathelement location="${basedir}/octopus-build-trigger-tests/lib/apache-ftpserver-1.0.5/ftpserver-core-1.0.5.jar"/>
    <pathelement location="${basedir}/octopus-build-trigger-tests/lib/apache-ftpserver-1.0.5/mina-core-2.0.0-RC1.jar"/>
    <pathelement location="${basedir}/octopus-build-trigger-tests/lib/apache-ftpserver-1.0.5/slf4j-api-1.5.2.jar"/>
    <pathelement location="${basedir}/octopus-build-trigger-tests/lib/apache-ftpserver-1.0.5/slf4j-log4j12-1.5.2.jar"/>
  </path>
  
  <path id="library.async-trigger.classpath">
    <pathelement location="${path.variable.teamcitydistribution}/webapps/ROOT/WEB-INF/plugins/Maven2/server/async-trigger.jar"/>
  </path>
  
  <path id="library.commons-io-2.4.classpath">
    <pathelement location="${basedir}/octopus-build-trigger-server/lib/commons-io-2.4.jar"/>
  </path>
  
  <path id="library.commons-net-3.1.classpath">
    <pathelement location="${basedir}/octopus-build-trigger-server/lib/commons-net-3.1.jar"/>
  </path>
  
  <path id="library.httpcomponents-client-4.3.2.classpath">
    <pathelement location="${basedir}/octopus-build-trigger-server/lib/commons-codec-1.6.jar"/>
    <pathelement location="${basedir}/octopus-build-trigger-server/lib/commons-logging-1.1.3.jar"/>
    <pathelement location="${basedir}/octopus-build-trigger-server/lib/httpclient-4.3.2.jar"/>
    <pathelement location="${basedir}/octopus-build-trigger-server/lib/httpcore-4.3.1.jar"/>
  </path>
  
  <path id="library.jmock-2.5.classpath">
    <pathelement location="${basedir}/octopus-build-trigger-tests/lib/jmock-2.5.1/bsh-core-2.0b4.jar"/>
    <pathelement location="${basedir}/octopus-build-trigger-tests/lib/jmock-2.5.1/cglib-nodep-2.1_3.jar"/>
    <pathelement location="${basedir}/octopus-build-trigger-tests/lib/jmock-2.5.1/hamcrest-core-1.1.jar"/>
    <pathelement location="${basedir}/octopus-build-trigger-tests/lib/jmock-2.5.1/hamcrest-integration-1.1.jar"/>
    <pathelement location="${basedir}/octopus-build-trigger-tests/lib/jmock-2.5.1/hamcrest-library-1.1.jar"/>
    <pathelement location="${basedir}/octopus-build-trigger-tests/lib/jmock-2.5.1/jmock-2.5.1.jar"/>
    <pathelement location="${basedir}/octopus-build-trigger-tests/lib/jmock-2.5.1/jmock-junit3-2.5.1.jar"/>
    <pathelement location="${basedir}/octopus-build-trigger-tests/lib/jmock-2.5.1/jmock-junit4-2.5.1.jar"/>
    <pathelement location="${basedir}/octopus-build-trigger-tests/lib/jmock-2.5.1/jmock-legacy-2.5.1.jar"/>
    <pathelement location="${basedir}/octopus-build-trigger-tests/lib/jmock-2.5.1/jmock-script-2.5.1.jar"/>
    <pathelement location="${basedir}/octopus-build-trigger-tests/lib/jmock-2.5.1/objenesis-1.0.jar"/>
  </path>
  
  <path id="library.json-simple-1.1.1.classpath">
    <pathelement location="${basedir}/octopus-build-trigger-server/lib/json-simple-1.1.1.jar"/>
  </path>
  
  <path id="library.teamcity-annotations.classpath">
    <pathelement location="${path.variable.teamcitydistribution}/webapps/ROOT/WEB-INF/lib/annotations.jar"/>
  </path>
  
  <path id="library.teamcity-common-api.classpath">
    <pathelement location="${path.variable.teamcitydistribution}/devPackage/common-api.jar"/>
  </path>
  
  <path id="library.teamcity-log4j.classpath">
    <pathelement location="${path.variable.teamcitydistribution}/webapps/ROOT/WEB-INF/lib/log4j-1.2.12.jar"/>
  </path>
  
  <path id="library.teamcity-server-api.classpath">
    <pathelement location="${path.variable.teamcitydistribution}/devPackage/server-api.jar"/>
  </path>
  
  <path id="library.teamcity-tests-support.classpath">
    <pathelement location="${path.variable.teamcitydistribution}/devPackage/tests/jmock-1.2.0.jar"/>
    <pathelement location="${path.variable.teamcitydistribution}/devPackage/tests/junit-3.8.2.jar"/>
    <pathelement location="${path.variable.teamcitydistribution}/devPackage/tests/patches-test.jar"/>
    <pathelement location="${path.variable.teamcitydistribution}/devPackage/tests/tests-support.jar"/>
  </path>
  
  <path id="library.teamcity-util.classpath">
    <pathelement location="${path.variable.teamcitydistribution}/webapps/ROOT/WEB-INF/lib/openapi.jar"/>
    <pathelement location="${path.variable.teamcitydistribution}/webapps/ROOT/WEB-INF/lib/util.jar"/>
  </path>
  
  <path id="library.testng-5.14.10.classpath">
    <pathelement location="${basedir}/octopus-build-trigger-tests/lib/testng-5.14.10.jar"/>
  </path>
  
  <!-- Modules -->
  
  
  <!-- Module octopus-build-trigger-server -->
  
  <dirname property="module.octopus-build-trigger-server.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.octopus-build-trigger-server" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.octopus-build-trigger-server" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.octopus-build-trigger-server" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.octopus-build-trigger-server" value="-encoding UTF-8 -source 1.8 -target 1.8 ${compiler.args}"/>
  
  <property name="octopus-build-trigger-server.output.dir" value="${module.octopus-build-trigger-server.basedir}/out/production/octopus-build-trigger-server"/>
  <property name="octopus-build-trigger-server.testoutput.dir" value="${module.octopus-build-trigger-server.basedir}/out/test/octopus-build-trigger-server"/>
  
  <path id="octopus-build-trigger-server.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="octopus-build-trigger-server.module.production.classpath">
    <path refid="${module.jdk.classpath.octopus-build-trigger-server}"/>
    <path refid="library.teamcity-server-api.classpath"/>
    <path refid="library.teamcity-annotations.classpath"/>
    <path refid="library.teamcity-log4j.classpath"/>
    <path refid="library.teamcity-common-api.classpath"/>
    <path refid="library.teamcity-util.classpath"/>
    <path refid="library.commons-io-2.4.classpath"/>
    <path refid="library.commons-net-3.1.classpath"/>
    <path refid="library.async-trigger.classpath"/>
    <path refid="library.httpcomponents-client-4.3.2.classpath"/>
    <path refid="library.json-simple-1.1.1.classpath"/>
  </path>
  
  <path id="octopus-build-trigger-server.runtime.production.module.classpath">
    <pathelement location="${octopus-build-trigger-server.output.dir}"/>
    <path refid="library.teamcity-server-api.classpath"/>
    <path refid="library.teamcity-annotations.classpath"/>
    <path refid="library.teamcity-log4j.classpath"/>
    <path refid="library.teamcity-common-api.classpath"/>
    <path refid="library.teamcity-util.classpath"/>
    <path refid="library.commons-io-2.4.classpath"/>
    <path refid="library.commons-net-3.1.classpath"/>
    <path refid="library.async-trigger.classpath"/>
    <path refid="library.httpcomponents-client-4.3.2.classpath"/>
    <path refid="library.json-simple-1.1.1.classpath"/>
  </path>
  
  <path id="octopus-build-trigger-server.module.classpath">
    <path refid="${module.jdk.classpath.octopus-build-trigger-server}"/>
    <pathelement location="${octopus-build-trigger-server.output.dir}"/>
    <path refid="library.teamcity-server-api.classpath"/>
    <path refid="library.teamcity-annotations.classpath"/>
    <path refid="library.teamcity-log4j.classpath"/>
    <path refid="library.teamcity-common-api.classpath"/>
    <path refid="library.teamcity-util.classpath"/>
    <path refid="library.commons-io-2.4.classpath"/>
    <path refid="library.commons-net-3.1.classpath"/>
    <path refid="library.async-trigger.classpath"/>
    <path refid="library.httpcomponents-client-4.3.2.classpath"/>
    <path refid="library.json-simple-1.1.1.classpath"/>
  </path>
  
  <path id="octopus-build-trigger-server.runtime.module.classpath">
    <pathelement location="${octopus-build-trigger-server.testoutput.dir}"/>
    <pathelement location="${octopus-build-trigger-server.output.dir}"/>
    <path refid="library.teamcity-server-api.classpath"/>
    <path refid="library.teamcity-annotations.classpath"/>
    <path refid="library.teamcity-log4j.classpath"/>
    <path refid="library.teamcity-common-api.classpath"/>
    <path refid="library.teamcity-util.classpath"/>
    <path refid="library.commons-io-2.4.classpath"/>
    <path refid="library.commons-net-3.1.classpath"/>
    <path refid="library.async-trigger.classpath"/>
    <path refid="library.httpcomponents-client-4.3.2.classpath"/>
    <path refid="library.json-simple-1.1.1.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.octopus-build-trigger-server">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.octopus-build-trigger-server">
    <patternset refid="excluded.from.module.octopus-build-trigger-server"/>
  </patternset>
  
  <path id="octopus-build-trigger-server.module.sourcepath">
    <dirset dir="${module.octopus-build-trigger-server.basedir}/octopus-build-trigger-server">
      <include name="src"/>
      <include name="resource"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.octopus-build-trigger-server" depends="compile.module.octopus-build-trigger-server.production,compile.module.octopus-build-trigger-server.tests" description="Compile module octopus-build-trigger-server"/>
  
  <target name="compile.module.octopus-build-trigger-server.production" description="Compile module octopus-build-trigger-server; production classes">
    <mkdir dir="${octopus-build-trigger-server.output.dir}"/>

    <echo message="*** classpath start ***" />
    <pathconvert property="classpathProp" refid="octopus-build-trigger-server.module.production.classpath"/>
    <echo>${classpathProp}</echo>
    <echo message="*** classpath end ***" />

    <javac destdir="${octopus-build-trigger-server.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.octopus-build-trigger-server}/javac" includeantruntime="false">
      <compilerarg line="${compiler.args.octopus-build-trigger-server}"/>
      <bootclasspath refid="octopus-build-trigger-server.module.bootclasspath"/>
      <classpath refid="octopus-build-trigger-server.module.production.classpath"/>
      <src refid="octopus-build-trigger-server.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.octopus-build-trigger-server"/>
    </javac>
    
    <copy todir="${octopus-build-trigger-server.output.dir}">
      <fileset dir="${module.octopus-build-trigger-server.basedir}/octopus-build-trigger-server/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.octopus-build-trigger-server.basedir}/octopus-build-trigger-server/resource">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.octopus-build-trigger-server.tests" depends="compile.module.octopus-build-trigger-server.production" description="compile module octopus-build-trigger-server; test classes" unless="skip.tests"/>
  
  <target name="clean.module.octopus-build-trigger-server" description="cleanup module">
    <delete dir="${octopus-build-trigger-server.output.dir}"/>
    <delete dir="${octopus-build-trigger-server.testoutput.dir}"/>
  </target>
  
  
  <!-- Module octopus-build-trigger-tests -->
  
  <dirname property="module.octopus-build-trigger-tests.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.octopus-build-trigger-tests" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.octopus-build-trigger-tests" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.octopus-build-trigger-tests" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.octopus-build-trigger-tests" value="-encoding UTF-8 -source 1.8 -target 1.8 ${compiler.args}"/>
  
  <property name="octopus-build-trigger-tests.output.dir" value="${module.octopus-build-trigger-tests.basedir}/out/production/octopus-build-trigger-tests"/>
  <property name="octopus-build-trigger-tests.testoutput.dir" value="${module.octopus-build-trigger-tests.basedir}/out/test/octopus-build-trigger-tests"/>
  
  <path id="octopus-build-trigger-tests.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="octopus-build-trigger-tests.module.production.classpath">
    <path refid="${module.jdk.classpath.octopus-build-trigger-tests}"/>
    <pathelement location="${octopus-build-trigger-server.output.dir}"/>
    <path refid="library.teamcity-common-api.classpath"/>
    <path refid="library.teamcity-util.classpath"/>
    <path refid="library.teamcity-server-api.classpath"/>
    <path refid="library.teamcity-annotations.classpath"/>
    <path refid="library.testng-5.14.10.classpath"/>
    <path refid="library.apache-ftpserver-1.0.5.classpath"/>
    <path refid="library.teamcity-tests-support.classpath"/>
    <path refid="library.commons-io-2.4.classpath"/>
    <path refid="library.jmock-2.5.classpath"/>
    <path refid="library.httpcomponents-client-4.3.2.classpath"/>
  </path>
  
  <path id="octopus-build-trigger-tests.runtime.production.module.classpath">
    <pathelement location="${octopus-build-trigger-tests.output.dir}"/>
    <path refid="octopus-build-trigger-server.runtime.production.module.classpath"/>
    <path refid="library.teamcity-common-api.classpath"/>
    <path refid="library.teamcity-util.classpath"/>
    <path refid="library.teamcity-server-api.classpath"/>
    <path refid="library.teamcity-annotations.classpath"/>
    <path refid="library.testng-5.14.10.classpath"/>
    <path refid="library.apache-ftpserver-1.0.5.classpath"/>
    <path refid="library.teamcity-tests-support.classpath"/>
    <path refid="library.commons-io-2.4.classpath"/>
    <path refid="library.jmock-2.5.classpath"/>
    <path refid="library.httpcomponents-client-4.3.2.classpath"/>
  </path>
  
  <path id="octopus-build-trigger-tests.module.classpath">
    <path refid="${module.jdk.classpath.octopus-build-trigger-tests}"/>
    <pathelement location="${octopus-build-trigger-tests.output.dir}"/>
    <pathelement location="${octopus-build-trigger-server.testoutput.dir}"/>
    <pathelement location="${octopus-build-trigger-server.output.dir}"/>
    <path refid="library.teamcity-common-api.classpath"/>
    <path refid="library.teamcity-util.classpath"/>
    <path refid="library.teamcity-server-api.classpath"/>
    <path refid="library.teamcity-annotations.classpath"/>
    <path refid="library.testng-5.14.10.classpath"/>
    <path refid="library.apache-ftpserver-1.0.5.classpath"/>
    <path refid="library.teamcity-tests-support.classpath"/>
    <path refid="library.commons-io-2.4.classpath"/>
    <path refid="library.jmock-2.5.classpath"/>
    <path refid="library.httpcomponents-client-4.3.2.classpath"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.12.jar"/>
  </path>
  
  <path id="octopus-build-trigger-tests.runtime.module.classpath">
    <pathelement location="${octopus-build-trigger-tests.testoutput.dir}"/>
    <pathelement location="${octopus-build-trigger-tests.output.dir}"/>
    <path refid="octopus-build-trigger-server.runtime.module.classpath"/>
    <path refid="library.teamcity-common-api.classpath"/>
    <path refid="library.teamcity-util.classpath"/>
    <path refid="library.teamcity-server-api.classpath"/>
    <path refid="library.teamcity-annotations.classpath"/>
    <path refid="library.testng-5.14.10.classpath"/>
    <path refid="library.apache-ftpserver-1.0.5.classpath"/>
    <path refid="library.teamcity-tests-support.classpath"/>
    <path refid="library.commons-io-2.4.classpath"/>
    <path refid="library.jmock-2.5.classpath"/>
    <path refid="library.httpcomponents-client-4.3.2.classpath"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.12.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.octopus-build-trigger-tests">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.octopus-build-trigger-tests">
    <patternset refid="excluded.from.module.octopus-build-trigger-tests"/>
  </patternset>
  
  <path id="octopus-build-trigger-tests.module.test.sourcepath">
    <dirset dir="${module.octopus-build-trigger-tests.basedir}/octopus-build-trigger-tests">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.octopus-build-trigger-tests" depends="compile.module.octopus-build-trigger-tests.production,compile.module.octopus-build-trigger-tests.tests" description="Compile module octopus-build-trigger-tests"/>
  
  <target name="compile.module.octopus-build-trigger-tests.production" depends="compile.module.octopus-build-trigger-server" description="Compile module octopus-build-trigger-tests; production classes"/>
  
  <target name="compile.module.octopus-build-trigger-tests.tests" depends="compile.module.octopus-build-trigger-tests.production" description="compile module octopus-build-trigger-tests; test classes" unless="skip.tests">
    <mkdir dir="${octopus-build-trigger-tests.testoutput.dir}"/>
    <javac destdir="${octopus-build-trigger-tests.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.octopus-build-trigger-tests}/javac" includeantruntime="false">
      <compilerarg line="${compiler.args.octopus-build-trigger-tests}"/>
      <bootclasspath refid="octopus-build-trigger-tests.module.bootclasspath"/>
      <classpath refid="octopus-build-trigger-tests.module.classpath"/>
      <src refid="octopus-build-trigger-tests.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.octopus-build-trigger-tests"/>
    </javac>
    
    <copy todir="${octopus-build-trigger-tests.testoutput.dir}">
      <fileset dir="${module.octopus-build-trigger-tests.basedir}/octopus-build-trigger-tests/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.octopus-build-trigger-tests" description="cleanup module">
    <delete dir="${octopus-build-trigger-tests.output.dir}"/>
    <delete dir="${octopus-build-trigger-tests.testoutput.dir}"/>
  </target>
  
  
  <!-- Module octopus-build-trigger -->
  
  <dirname property="module.octopus-build-trigger.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.octopus-build-trigger" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.octopus-build-trigger" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.octopus-build-trigger" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.octopus-build-trigger" value="-encoding UTF-8 -source 1.8 -target 1.8 ${compiler.args}"/>
  
  <property name="octopus-build-trigger.output.dir" value="${module.octopus-build-trigger.basedir}/out/production/octopus-build-trigger"/>
  <property name="octopus-build-trigger.testoutput.dir" value="${module.octopus-build-trigger.basedir}/out/test/octopus-build-trigger"/>
  
  <path id="octopus-build-trigger.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="octopus-build-trigger.module.production.classpath">
    <path refid="${module.jdk.classpath.octopus-build-trigger}"/>
    <pathelement location="${octopus-build-trigger-server.output.dir}"/>
    <pathelement location="${octopus-build-trigger-tests.output.dir}"/>
  </path>
  
  <path id="octopus-build-trigger.runtime.production.module.classpath">
    <pathelement location="${octopus-build-trigger.output.dir}"/>
    <path refid="octopus-build-trigger-server.runtime.production.module.classpath"/>
    <path refid="octopus-build-trigger-tests.runtime.production.module.classpath"/>
  </path>
  
  <path id="octopus-build-trigger.module.classpath">
    <path refid="${module.jdk.classpath.octopus-build-trigger}"/>
    <pathelement location="${octopus-build-trigger.output.dir}"/>
    <pathelement location="${octopus-build-trigger-server.testoutput.dir}"/>
    <pathelement location="${octopus-build-trigger-server.output.dir}"/>
    <pathelement location="${octopus-build-trigger-tests.testoutput.dir}"/>
    <pathelement location="${octopus-build-trigger-tests.output.dir}"/>
  </path>
  
  <path id="octopus-build-trigger.runtime.module.classpath">
    <pathelement location="${octopus-build-trigger.testoutput.dir}"/>
    <pathelement location="${octopus-build-trigger.output.dir}"/>
    <path refid="octopus-build-trigger-server.runtime.module.classpath"/>
    <path refid="octopus-build-trigger-tests.runtime.module.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.octopus-build-trigger">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.octopus-build-trigger">
    <patternset refid="excluded.from.module.octopus-build-trigger"/>
  </patternset>
  
  
  <target name="compile.module.octopus-build-trigger" depends="compile.module.octopus-build-trigger.production,compile.module.octopus-build-trigger.tests" description="Compile module octopus-build-trigger"/>
  
  <target name="compile.module.octopus-build-trigger.production" depends="compile.module.octopus-build-trigger-server,compile.module.octopus-build-trigger-tests" description="Compile module octopus-build-trigger; production classes"/>
  
  <target name="compile.module.octopus-build-trigger.tests" depends="compile.module.octopus-build-trigger.production" description="compile module octopus-build-trigger; test classes" unless="skip.tests"/>
  
  <target name="clean.module.octopus-build-trigger" description="cleanup module">
    <delete dir="${octopus-build-trigger.output.dir}"/>
    <delete dir="${octopus-build-trigger.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.octopus-build-trigger-server, clean.module.octopus-build-trigger-tests, clean.module.octopus-build-trigger, clean.artifact.octopus-build-trigger-plugin-unpacked, clean.artifact.octopus-build-trigger-plugin-zip" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.octopus-build-trigger-server, compile.module.octopus-build-trigger-tests, compile.module.octopus-build-trigger" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.octopus-build-trigger-plugin-unpacked" value="${basedir}/out/artifacts/octopus_build_trigger_plugin_unpacked"/>
    <property name="artifact.output.octopus-build-trigger-plugin-zip" value="${basedir}/out/artifacts/octopus_build_trigger_plugin_zip"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="temp.jar.path.octopus-build-trigger.jar" value="${artifacts.temp.dir}/octopus-build-trigger.jar"/>
    <property name="temp.jar.path.octopus-build-trigger.zip" value="${artifacts.temp.dir}/octopus-build-trigger.zip"/>
  </target>
  
  <target name="clean.artifact.octopus-build-trigger-plugin-unpacked" description="clean octopus-build-trigger-plugin-unpacked artifact output">
    <delete dir="${artifact.output.octopus-build-trigger-plugin-unpacked}"/>
  </target>
  
  <target name="clean.artifact.octopus-build-trigger-plugin-zip" description="clean octopus-build-trigger-plugin-zip artifact output">
    <delete dir="${artifact.output.octopus-build-trigger-plugin-zip}"/>
  </target>
  
  <target name="artifact.octopus-build-trigger-plugin-unpacked" depends="init.artifacts, compile.module.octopus-build-trigger-server" description="Build &#39;octopus-build-trigger-plugin-unpacked&#39; artifact">
    <mkdir dir="${artifact.output.octopus-build-trigger-plugin-unpacked}"/>
    <jar destfile="${temp.jar.path.octopus-build-trigger.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset dir="${octopus-build-trigger-server.output.dir}"/>
      <zipfileset dir="${basedir}/octopus-build-trigger-server/resource/buildServerResources" prefix="buildServerResources"/>
    </jar>
    <mkdir dir="${artifact.output.octopus-build-trigger-plugin-unpacked}/server"/>
    <copy file="${temp.jar.path.octopus-build-trigger.jar}" tofile="${artifact.output.octopus-build-trigger-plugin-unpacked}/server/octopus-build-trigger.jar"/>
    <copy todir="${artifact.output.octopus-build-trigger-plugin-unpacked}/server">
      <fileset dir="${basedir}/octopus-build-trigger-server/lib"/>
    </copy>
    <copy file="${path.variable.teamcitydistribution}/webapps/ROOT/WEB-INF/plugins/Maven2/server/async-trigger.jar" tofile="${artifact.output.octopus-build-trigger-plugin-unpacked}/server/async-trigger.jar"/>
    <copy file="${basedir}/teamcity-plugin.xml" tofile="${artifact.output.octopus-build-trigger-plugin-unpacked}/teamcity-plugin.xml"/>
    <ant antfile="build.xml" target="replace-tokens-in-teamcity-plugin-xml" dir="${basedir}">
      <property name="artifact.output.path" value="${artifact.output.octopus-build-trigger-plugin-unpacked}"/>
    </ant>
  </target>
  
  <target name="artifact.octopus-build-trigger-plugin-zip" depends="init.artifacts, artifact.octopus-build-trigger-plugin-unpacked" description="Build &#39;octopus-build-trigger-plugin-zip&#39; artifact">
    <mkdir dir="${artifact.output.octopus-build-trigger-plugin-zip}"/>
    <zip destfile="${temp.jar.path.octopus-build-trigger.zip}">
      <zipfileset dir="${artifact.output.octopus-build-trigger-plugin-unpacked}"/>
    </zip>
    <copy file="${temp.jar.path.octopus-build-trigger.zip}" tofile="${artifact.output.octopus-build-trigger-plugin-zip}/octopus-build-trigger.zip"/>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.octopus-build-trigger-plugin-unpacked, artifact.octopus-build-trigger-plugin-zip" description="Build all artifacts">
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>

    <taskdef name="testng" classname="org.testng.TestNGAntTask">
    <classpath location="octopus-build-trigger-tests/lib/testng-5.14.10.jar" />
  </taskdef>

  <target name="test">
   <testng outputdir="out/test-output" classpathref="octopus-build-trigger-tests.runtime.module.classpath"> 
     <xmlfileset dir="octopus-build-trigger-tests/resource" includes="testng.xml"/> 
   </testng>
  </target>

  
  <target name="all" depends="build.modules, test, build.all.artifacts" description="build all"/>

</project>
